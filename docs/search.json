[
  {
    "objectID": "Installation.html",
    "href": "Installation.html",
    "title": "Install Software",
    "section": "",
    "text": "You will first need to make sure that R, Rstudio, Rtools, Quarto and Git are installed on every instrument computer that you will be collecting daily QC data from. Follow along below for instructions for downloading each on a Windows computer.\n\n\nR is a free software and programming language used by researchers and data scientist worldwide. To begin you will need to navigate to the main website. You will first select Download R for Windows\n\n\n\n\n\nYou will be redirected to the next screen, where you should select install R for the first time:\n\n\n\n\n\nAnd finally you will see the following screen, where you will select the current version of Download R for Windows:\n\n\n\n\n\nThe next screen will ask where you want to save the installer. I generally place it on the desktop. Once downloaded, double click and proceed with the software installation, selecting the default options.\n\n\n\nRstudio is an integrated development environment (IDE), providing an interface with R that is friendlier to many users. We will use it in our context to set up project folders that will contain the code and data needed to process the QC data and export it to the dashboard.\nTo download, we first navigate to the website and select Download R Studio Desktop for Windows\n\n\n\n\n\nThis will then proceed to show the pop-up asking where you want to save the installer. Save to the desktop, and then double click the installer. Follow the default installation prompts.\n\n\n\nR packages are made up of functions that carry out specific tasks. Some of the R packages that we will be using require compilation from source code, which requires installation of Rtools to mediate this process.\nTo begin, navigate to the website and select the most recent version of Rtools\n\n\n\n\n\nThen, you will select the regular Rtools installer\n\n\n\n\n\nThis will then provide the pop-up asking where to save the installer. Place on the desktop, then after it has finished downloading, double click to run the installer. Select the default options.\n\n\n\nThe dashboard (and this website you are currently reading) are built with [Quarto](https://quarto.org/). It facilitates making websites from various programming languages commonly used by data scientist who didn’t start off as computer programmers. In our context, we will use it to produce both the website and individual dashboard pages.\nTo begin, after navigating to the [website](https://quarto.org/) we will first select the Get Started tab\n\n\n\n\n\nThen we will select Download Quarto Cli to download the most recent version for Windows.\n\n\n\n\n\nFinally, the pop-up asking where we want to save the installer will pop up. Save to the desktop, and after it finished downloading, double click and select the default options.\n\n\n\n[Git](https://git-scm.com/) is used for version control by many programmers. We will be using it in the context of the dashboard for managing the processed data, and forwarding it on to GitHub for use in the dashboard.\nTo begin, we will first navigate to the [website](https://git-scm.com/) and select the download from Windows option.\n\n\n\n\n\nWe will then proceed and select install 64-bit Git for Windows Setup option\n\n\n\n\n\nFinally, the pop-up will appear asking where to save the installer. Select and save to the Desktop. After the installer has finished downloading, double click, and accept the default options. Be advised, Git has a lot of options, for now, just accept all defaults without wandering off on a “What is Vim?!?” rabbit-hole."
  },
  {
    "objectID": "Installation.html#r",
    "href": "Installation.html#r",
    "title": "Install Software",
    "section": "",
    "text": "R is a free software and programming language used by researchers and data scientist worldwide. To begin you will need to navigate to the main website. You will first select Download R for Windows\n\n\n\n\n\nYou will be redirected to the next screen, where you should select install R for the first time:\n\n\n\n\n\nAnd finally you will see the following screen, where you will select the current version of Download R for Windows:\n\n\n\n\n\nThe next screen will ask where you want to save the installer. I generally place it on the desktop. Once downloaded, double click and proceed with the software installation, selecting the default options."
  },
  {
    "objectID": "Installation.html#rstudio",
    "href": "Installation.html#rstudio",
    "title": "Install Software",
    "section": "",
    "text": "Rstudio is an integrated development environment (IDE), providing an interface with R that is friendlier to many users. We will use it in our context to set up project folders that will contain the code and data needed to process the QC data and export it to the dashboard.\nTo download, we first navigate to the website and select Download R Studio Desktop for Windows\n\n\n\n\n\nThis will then proceed to show the pop-up asking where you want to save the installer. Save to the desktop, and then double click the installer. Follow the default installation prompts."
  },
  {
    "objectID": "Installation.html#rtools",
    "href": "Installation.html#rtools",
    "title": "Install Software",
    "section": "",
    "text": "R packages are made up of functions that carry out specific tasks. Some of the R packages that we will be using require compilation from source code, which requires installation of Rtools to mediate this process.\nTo begin, navigate to the website and select the most recent version of Rtools\n\n\n\n\n\nThen, you will select the regular Rtools installer\n\n\n\n\n\nThis will then provide the pop-up asking where to save the installer. Place on the desktop, then after it has finished downloading, double click to run the installer. Select the default options."
  },
  {
    "objectID": "Installation.html#quarto",
    "href": "Installation.html#quarto",
    "title": "Install Software",
    "section": "",
    "text": "The dashboard (and this website you are currently reading) are built with [Quarto](https://quarto.org/). It facilitates making websites from various programming languages commonly used by data scientist who didn’t start off as computer programmers. In our context, we will use it to produce both the website and individual dashboard pages.\nTo begin, after navigating to the [website](https://quarto.org/) we will first select the Get Started tab\n\n\n\n\n\nThen we will select Download Quarto Cli to download the most recent version for Windows.\n\n\n\n\n\nFinally, the pop-up asking where we want to save the installer will pop up. Save to the desktop, and after it finished downloading, double click and select the default options."
  },
  {
    "objectID": "Installation.html#git",
    "href": "Installation.html#git",
    "title": "Install Software",
    "section": "",
    "text": "[Git](https://git-scm.com/) is used for version control by many programmers. We will be using it in the context of the dashboard for managing the processed data, and forwarding it on to GitHub for use in the dashboard.\nTo begin, we will first navigate to the [website](https://git-scm.com/) and select the download from Windows option.\n\n\n\n\n\nWe will then proceed and select install 64-bit Git for Windows Setup option\n\n\n\n\n\nFinally, the pop-up will appear asking where to save the installer. Select and save to the Desktop. After the installer has finished downloading, double click, and accept the default options. Be advised, Git has a lot of options, for now, just accept all defaults without wandering off on a “What is Vim?!?” rabbit-hole."
  },
  {
    "objectID": "Continuation.html",
    "href": "Continuation.html",
    "title": "Setting up the Dashboard",
    "section": "",
    "text": "The data for the dashboard is processed using R. Similarly, the dashboard website itself is built with Quarto and published as a GitHub pages.\nYou will first need to make sure that R, RStudio, Rtools, Quarto and Git are installed on every computer you will be collecting QC data from. Accept the default configurations when setting these softwares up. If you do not have admin privileges to install these software programs, reach out to your IT person.\nIf you don’t already have one setup, you will need to create a GitHub account. The free tier should be fine.\nOnce this is done, sign in and fork the project to your own account. This will copy the folder to your GitHub account where you can start making changes.\nBefore getting started, you will need to set up a Github Token access between your individual computers and your GitHub account. To do so, navigate to…\nTo ensure you can process the data and generate the plots, you will need to install the Luciernaga package and it’s dependencies, as well as a couple tidyverse packages. These can be done as follows…\n\nSetting up the Dashboard\nHaving all the pieces, let’s begin with the dashboard structure.\nEach of the website/dashboards pages is represented by it’s own .qmd file. If you only have one instrument, you would eliminate the uneccessary .qmd files until only the necessary ones are present.\nOnce this is done, you can adjust the code to match number of parameters present.\n\n\nAutomating the Dashboard\nOnce you have customized the .qmd files for your respective instruments, and you have successfully rendered the dashboard and deployed to the GitHub pages, you are at the stage that if so desired you can automate the process and send the data to your GitHub.\nTo do this, we rely on two components. The TaskScheduler is part of your Windows system that schedules when to do updates, etc. We can use this to our advantage and set a particular time for when the files need to be processed and passed to GitHub.\nThe second part is the script. The script is customized for each instruments computer file structure, pointing to the location of the InstrumentQC folder, the folder containing the before and after QC Bead .fcs files, and the DailyQC .csv outputs folder. Once these file paths are specified, and task scheduler set, they will retrieve the data on a daily basis and send."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Big Picture",
    "section": "",
    "text": "If you have reached this webpage, it is likely you have discovered our InstrumentQC dashboard we implemented at the University of Maryland, Baltimore and are either curious how it works, or looking to see if you can implement it for your own Cytek instruments at your current workspace.\nHaving put some effort into getting this to work in the first place, I would love to see others benefit and implement their own version of the dashboard more broadly. I am therefore providing this quite-detailed explanation of the process that goes into producing our version of the dashboard. Those with some previous R and GitHub experience should likely be able to replicate and customize to their own installations with only some adjustments needed. If you are starting from scratch on the coding side, I have made a good effort at at screen shots to hopefully reduce any barriers that you may encounter. If you do get stuck, first check issues to see if other’s have encountered a similar issue, and if not, feel free to open a new one and I will see if I can help troubleshoot.\nBest- David\n\nBig Picture\nAfter Daily QC, the resulting daily QC files (both .fcs and .csv) are processed using R. This data is version controlled using Git, and passed along to a GitHub repository for storage. The dashboard itself is built using Quarto and published as a GitHub page.\nWe install the required software to execute the above process on each instruments computer, tailoring an R script (.R) and Quarto Markdown File (.qmd) for each instrument. We then set a WindowsTaskSchedule to automatically run the data-processing step at a given time, and pass the data to GitHub. This can then be rendered manually into the dashboard, or a Github Actions set up to render the dashboard at a particular time of day."
  }
]